@use "sass:map";
@use "sass:color";

$themes: (
  light: (
    text: hsl(180, 40%, 4%),
    background: hsl(180, 80%, 96%),
    primary: hsl(175, 50%, 55%),
    secondary: hsl(222, 75%, 70%),
    accent: hsl(292, 25%, 65%),
    border: hsl(180, 20%, 85%),
    surface: hsl(180, 60%, 98%),
    muted: hsl(180, 20%, 60%),
  ),
  dark: (
    text: hsl(180, 40%, 96%),
    background: hsl(180, 80%, 4%),
    primary: hsl(175, 50%, 45%),
    secondary: hsl(222, 75%, 30%),
    accent: hsl(292, 25%, 35%),
    border: hsl(180, 20%, 15%),
    surface: hsl(180, 60%, 8%),
    muted: hsl(180, 20%, 40%),
  ),
);

// Mixin padrão para root
@mixin apply-theme-properties($theme) {
  $theme-map: map.get($themes, $theme);

  @if not $theme-map {
    @error "Theme '#{$theme}' not found. Available themes: #{map.keys($themes)}";
  }

  @each $key, $value in $theme-map {
    --#{$key}: #{$value};
  }
}

// Mixin com !important para classes
@mixin apply-theme-properties-important($theme) {
  $theme-map: map.get($themes, $theme);

  @if not $theme-map {
    @error "Theme '#{$theme}' not found. Available themes: #{map.keys($themes)}";
  }

  @each $key, $value in $theme-map {
    --#{$key}: #{$value} !important;
  }
}

// Função para acessar cores do tema
@function theme-color($key, $theme: light) {
  @return map.get(map.get($themes, $theme), $key);
}

// Mixins utilitários
@mixin color-variants($base-color, $prefix: "") {
  #{$prefix}color: $base-color;
  #{$prefix}color-light: color.scale($base-color, $lightness: 15%);
  #{$prefix}color-dark: color.scale($base-color, $lightness: -15%);
  #{$prefix}color-transparent: color.scale($base-color, $alpha: -20%);
}

@mixin interactive-states($base-color, $text-color: null) {
  background: $base-color;
  @if $text-color {
    color: $text-color;
  }

  &:hover {
    background: color.scale($base-color, $lightness: -8%);
  }

  &:focus {
    background: color.scale($base-color, $lightness: -5%);
    box-shadow: 0 0 0 3px color.scale($base-color, $alpha: -70%);
  }

  &:active {
    background: color.scale($base-color, $lightness: -12%);
  }
}
