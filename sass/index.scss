@use "themes" as *;
@use "bulma/sass/utilities/mixins" as mixins;
@import url("../fonts/Noto_Sans_Mono/NotoSansMono-VariableFont_wdth,wght.ttf");

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html,
body {
  height: 100%;
  font-family: "Noto Sans Mono", monospace;
  font-weight: 500;
  background: var(--background);
  color: var(--text);
  transition: background-color 0.3s cubic-bezier(0.4, 0, 0.2, 1),
    color 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

// Aplicação dos temas MD3
:root {
  @include apply-theme-properties(light);
}

@media (prefers-color-scheme: dark) {
  :root {
    @include apply-theme-properties(dark);
  }
}

// Temas específicos via atributos
:root[data-theme="light"],
:root.light-theme {
  @include apply-theme-properties(light);
}

:root[data-theme="dark"],
:root.dark-theme {
  @include apply-theme-properties(dark);
}

:root[data-theme="light-hc"],
:root.light-hc-theme {
  @include apply-theme-properties(light-hc);
}

:root[data-theme="dark-hc"],
:root.dark-hc-theme {
  @include apply-theme-properties(dark-hc);
}

// Temas forçados com !important
html.light-theme,
html.light-theme *,
body.light-theme,
body.light-theme * {
  @include apply-theme-properties-important(light);
}

html.dark-theme,
html.dark-theme *,
body.dark-theme,
body.dark-theme * {
  @include apply-theme-properties-important(dark);
}

html.light-hc-theme,
html.light-hc-theme *,
body.light-hc-theme,
body.light-hc-theme * {
  @include apply-theme-properties-important(light-hc);
}

html.dark-hc-theme,
html.dark-hc-theme *,
body.dark-hc-theme,
body.dark-hc-theme * {
  @include apply-theme-properties-important(dark-hc);
}

// Componentes Bulma otimizados com MD3
// ===== NOTIFICATIONS - Enhanced with HSL contrast =====
.notification {
  @include md3-elevation(1);
  border: 1px solid transparent !important;
  border-radius: 12px;
  padding: 1rem 1.25rem;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;

  // Base notification
  background-color: var(--md-sys-color-surface-container);
  color: var(--md-sys-color-on-surface);
  border-color: var(--md-sys-color-outline-variant);

  &:hover {
    @include md3-elevation(2);
    transform: translateY(-1px);
  }

  // Primary notification - info style
  &.is-primary,
  &.is-info {
    @include notification-variant(--md-sys-color-primary);
  }

  // Success notification
  &.is-success {
    @include notification-variant(--md-sys-color-tertiary);
  }

  // Warning notification
  &.is-warning {
    @include notification-variant(--md-sys-color-error);
  }

  // Danger notification
  &.is-danger {
    @include notification-variant(--md-sys-color-error);
  }

  // Delete button styling
  .delete {
    background-color: transparent;
    border: none;
    color: inherit;
    opacity: 0.7;
    transition: all 0.2s ease;
    position: absolute;
    top: 0.75rem;
    right: 0.75rem;
    width: 1.5rem;
    height: 1.5rem;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;

    &:hover {
      opacity: 1;
      background-color: var(--md-sys-color-surface-container-highest);
      transform: scale(1.1);
    }

    &:focus {
      outline: 2px solid var(--md-sys-color-primary);
      outline-offset: 1px;
    }

    &::before,
    &::after {
      content: "";
      position: absolute;
      width: 12px;
      height: 2px;
      background-color: currentColor;
      border-radius: 1px;
    }

    &::before {
      transform: rotate(45deg);
    }

    &::after {
      transform: rotate(-45deg);
    }
  }

  // Notification title
  .notification-title {
    font-weight: 600;
    margin-bottom: 0.5rem;
    font-size: 1.1em;
  }

  // Notification content
  .notification-content {
    line-height: 1.5;
  }
}

// ===== BUTTONS - Enhanced with HSL states =====
.button {
  @include md3-ripple();
  @include md3-elevation(1);
  border: 1px solid transparent !important;
  border-radius: 20px;
  font-weight: 500;
  transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  overflow: hidden;

  // Base button - uses surface colors
  background-color: var(--md-sys-color-surface-container-high);
  color: var(--md-sys-color-on-surface);
  border-color: var(--md-sys-color-outline);

  &:hover {
    @include md3-elevation(3);
    transform: translateY(-2px);
    background-color: var(--md-sys-color-surface-container-highest);
    box-shadow: 0 4px 12px hsla(var(--md-sys-color-shadow), 0.25);
  }

  &:focus {
    outline: 2px solid var(--md-sys-color-primary) !important;
    outline-offset: 2px;
    background-color: var(--md-sys-color-surface-container-highest);
    box-shadow: 0 0 0 2px var(--md-sys-color-primary-container),
      0 6px 20px hsla(var(--md-sys-color-shadow), 0.3) !important;
  }

  &:active {
    transform: translateY(-1px) scale(0.98);
    @include md3-elevation(2);
  }

  // Primary button - enhanced contrast
  &.is-primary {
    background-color: var(--md-sys-color-primary) !important;
    color: var(--md-sys-color-on-primary) !important;
    border-color: var(--md-sys-color-primary) !important;

    &:hover {
      // Create dynamic hover state based on HSL
      background-color: var(--md-sys-color-primary-container) !important;
      color: var(--md-sys-color-on-primary-container) !important;
      border-color: var(--md-sys-color-primary) !important;
      box-shadow: 0 4px 16px hsla(158, 55%, 27%, 0.3);
    }

    &:focus {
      background-color: var(--md-sys-color-primary-container) !important;
      color: var(--md-sys-color-on-primary-container) !important;
      border-color: var(--md-sys-color-primary) !important;
      box-shadow: 0 0 0 2px var(--md-sys-color-primary-container),
        0 6px 20px hsla(158, 55%, 27%, 0.4) !important;
    }

    &:active {
      background-color: var(--md-sys-color-primary) !important;
      filter: brightness(0.9);
    }
  }

  // Secondary button
  &.is-secondary {
    background-color: var(--md-sys-color-secondary) !important;
    color: var(--md-sys-color-on-secondary) !important;
    border-color: var(--md-sys-color-secondary) !important;

    &:hover {
      background-color: var(--md-sys-color-secondary-container) !important;
      color: var(--md-sys-color-on-secondary-container) !important;
      box-shadow: 0 4px 16px hsla(147, 13%, 35%, 0.3);
    }

    &:focus {
      background-color: var(--md-sys-color-secondary-container) !important;
      color: var(--md-sys-color-on-secondary-container) !important;
      box-shadow: 0 0 0 2px var(--md-sys-color-secondary-container),
        0 6px 20px hsla(147, 13%, 35%, 0.4) !important;
    }
  }

  // Success button (using tertiary colors)
  &.is-success {
    background-color: var(--md-sys-color-tertiary) !important;
    color: var(--md-sys-color-on-tertiary) !important;
    border-color: var(--md-sys-color-tertiary) !important;

    &:hover {
      background-color: var(--md-sys-color-tertiary-container) !important;
      color: var(--md-sys-color-on-tertiary-container) !important;
      box-shadow: 0 4px 16px hsla(200, 22%, 40%, 0.3);
    }

    &:focus {
      background-color: var(--md-sys-color-tertiary-container) !important;
      color: var(--md-sys-color-on-tertiary-container) !important;
      box-shadow: 0 0 0 2px var(--md-sys-color-tertiary-container),
        0 6px 20px hsla(200, 22%, 40%, 0.4) !important;
    }
  }

  // Warning/Error button
  &.is-warning,
  &.is-danger {
    background-color: var(--md-sys-color-error) !important;
    color: var(--md-sys-color-on-error) !important;
    border-color: var(--md-sys-color-error) !important;

    &:hover {
      background-color: var(--md-sys-color-error-container) !important;
      color: var(--md-sys-color-on-error-container) !important;
      box-shadow: 0 4px 16px hsla(0, 75%, 42%, 0.3);
    }

    &:focus {
      background-color: var(--md-sys-color-error-container) !important;
      color: var(--md-sys-color-on-error-container) !important;
      box-shadow: 0 0 0 2px var(--md-sys-color-error-container),
        0 6px 20px hsla(0, 75%, 42%, 0.4) !important;
    }
  }

  // Outlined button
  &.is-outlined {
    background-color: transparent !important;
    color: var(--md-sys-color-primary) !important;
    border: 2px solid var(--md-sys-color-primary) !important;

    &:hover {
      background-color: var(--md-sys-color-primary-container) !important;
      color: var(--md-sys-color-on-primary-container) !important;
    }

    &:focus {
      background-color: var(--md-sys-color-primary-container) !important;
      color: var(--md-sys-color-on-primary-container) !important;
    }
  }

  // Text button
  &.is-text {
    background-color: transparent !important;
    border: none !important;
    color: var(--md-sys-color-primary) !important;
    box-shadow: none !important;

    &:hover {
      background-color: var(--md-sys-color-primary-container) !important;
      color: var(--md-sys-color-on-primary-container) !important;
      box-shadow: none !important;
      transform: none;
    }

    &:focus {
      background-color: var(--md-sys-color-primary-container) !important;
      color: var(--md-sys-color-on-primary-container) !important;
      box-shadow: 0 0 0 2px var(--md-sys-color-primary) !important;
    }
  }
}

.title {
  color: var(--on-surface) !important;
  font-weight: 600;
}

#theme-container {
  position: fixed;
  z-index: 1000;

  @include mixins.mobile {
    top: 1rem;
    right: 1rem;
  }

  @include mixins.tablet {
    bottom: 1rem;
    right: 1rem;
  }

  #theme-toggle {
    position: absolute;
    display: flex;
    width: 2.75rem;
    height: 2.75rem;
    anchor-name: _theme-toggle;
    align-items: center;
    justify-content: center;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(8px);
    transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1),
      box-shadow 0.2s cubic-bezier(0.4, 0, 0.2, 1);

    @include mixins.mobile {
      top: 0;
      right: 0;
    }

    @include mixins.tablet {
      bottom: 0;
      right: 0;
    }

    &:hover {
      transform: scale(1.05);
      box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
    }

    &:active {
      transform: scale(0.95);
    }

    ion-icon {
      font-size: 100%;
      transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
    }
  }

  #theme-popup {
    position: fixed;
    position-anchor: _theme-toggle;
    min-width: fit-content;
    max-width: 100%;
    padding: 0.75rem;
    transition: opacity 0.25s cubic-bezier(0.16, 1, 0.3, 1),
      transform 0.25s cubic-bezier(0.16, 1, 0.3, 1);

    @include mixins.mobile {
      top: 3.8rem;
      right: 0.9rem;
    }

    @include mixins.tablet {
      padding: 0.5rem;
      bottom: 3.8rem;
      right: 0.9rem;
    }

    .buttons {
      gap: 0.75em;
      display: flex;
      padding: 0.25em;
      flex-direction: column;
      min-width: fit-content;
      max-width: 100%;
      .button {
        @include md3-component-colors("button");
        @include md3-ripple();
        @include md3-elevation(1);

        display: flex;
        align-items: center;
        justify-content: center;
        gap: 1rem;
        min-width: fit-content;
        max-width: 100%;
        padding: 0.75em 1em;
        border-radius: 0.75em;
        border: 1px solid transparent !important;
        transition: all 0.25s cubic-bezier(0.4, 0, 0.2, 1);

        &:hover {
          @include md3-elevation(3);
          transform: translateY(-2px);
        }

        &:active {
          transform: translateY(-1px) scale(0.98);
          @include md3-elevation(2);
        }

        &:focus {
          outline: 2px solid var(--md-sys-color-secondary, var(--secondary)) !important;
          outline-offset: 2px;
          box-shadow: 0 6px 20px rgba(0, 0, 0, 0.19),
            0 6px 6px rgba(0, 0, 0, 0.23) !important;
        }

        ion-icon {
          font-size: 1.25rem;
          flex-shrink: 0;
        }

        span {
          font-weight: 500;
        }
      }
    }
  }
}
