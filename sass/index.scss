@use "themes" as *;
@use "sass:color";
@use "sass:map";

// Configuração inicial do tema light como padrão
$theme-map: map.get($themes, light) !default;

// Função para acessar valores do tema atual
@function theme($key) {
  @return map.get($theme-map, $key);
}

// Aplicar tema padrão (light)
html {
  color: theme(text);
  background: theme(background);
}

// Tema escuro via prefers-color-scheme
@media (prefers-color-scheme: dark) {
  html {
    $theme-map: map.get($themes, dark) !global;
    color: theme(text);
    background: theme(background);
  }
}

// Temas forçados via classe ou data-attribute
@include themifying($themes) {
  html {
    color: themed(text);
    background: themed(background);
  }

  // Exemplo de uso em outros elementos
  .button {
    background: themed(primary);
    color: themed(text);

    &:hover {
      background: color.scale(themed(primary), $lightness: -10%);
    }
  }

  .card {
    background: themed(background);
    border: 1px solid color.scale(themed(text), $lightness: 70%);
    color: themed(text);
  }

  .navbar {
    background: themed(secondary);
    color: themed(text);

    .navbar-item {
      color: themed(text);

      &:hover {
        background: color.scale(themed(text), $alpha: -90%);
      }
    }
  }

  .hero {
    background: linear-gradient(135deg, themed(primary), themed(secondary));
    color: themed(text);

    &.is-accent {
      background: themed(accent);
    }
  }
}

// Classes auxiliares para temas específicos
.text-primary {
  color: theme(primary);
}
.text-secondary {
  color: theme(secondary);
}
.text-accent {
  color: theme(accent);
}

.bg-primary {
  background: theme(primary);
}
.bg-secondary {
  background: theme(secondary);
}
.bg-accent {
  background: theme(accent);
}

// Mixin para componentes que precisam reagir aos temas
@mixin theme-aware {
  @include themifying($themes) {
    @content;
  }
}

// Exemplo de uso do mixin theme-aware
.custom-component {
  @include theme-aware {
    background: themed(background);
    border: 2px solid themed(primary);
    color: themed(text);

    &:hover {
      background: themed(primary);
      color: themed(background);
    }
  }
}
