@use "themes" as *;
@use "sass:color";
@use "sass:map";

// Configuração inicial do tema light como padrão
$theme-map: map.get($themes, light) !default;

// Função para acessar valores do tema atual
@function theme($key) {
  @return map.get($theme-map, $key);
}

// Aplicar tema padrão (light)
html {
  color: theme(text);
  background: theme(background);
}

// Tema escuro via prefers-color-scheme
@media (prefers-color-scheme: dark) {
  html {
    $theme-map: map.get($themes, dark) !global;
    color: theme(text);
    background: theme(background);
  }
}

// Temas forçados via classe ou data-attribute
@include themifying($themes) {
  html {
    color: themed(text);
    background: themed(background);
  }

  // Exemplo de uso em outros elementos
  .button {
    background: themed(primary);
    color: themed(text);

    &:hover {
      background: color.scale(themed(primary), $lightness: -10%);
    }
  }

  .card {
    background: themed(background);
    border: 1px solid color.scale(themed(text), $lightness: 70%);
    color: themed(text);
  }

  .navbar {
    background: themed(secondary);
    color: themed(text);

    .navbar-item {
      color: themed(text);

      &:hover {
        background: color.scale(themed(text), $alpha: -90%);
      }
    }
  }

  .hero {
    background: linear-gradient(135deg, themed(primary), themed(secondary));
    color: themed(text);

    &.is-accent {
      background: themed(accent);
    }
  }
}

// Theme Toggle Component Styles
.theme-toggle-container {
  position: fixed;
  z-index: 9999;

  // Mobile: top right
  top: 1rem;
  right: 1rem;

  // Desktop: bottom right
  @media (min-width: 769px) {
    top: auto;
    bottom: 1rem;
  }
}

.theme-toggle-button {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;

  &:hover {
    transform: scale(1.05);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
  }

  .icon {
    font-size: 1.2rem;
  }
}

.theme-popup {
  position: absolute;
  top: 100%;
  right: 0;
  margin-top: 0.5rem;
  min-width: 140px;
  padding: 0.5rem;
  border-radius: 0.5rem;
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);

  // Mobile: adjust position
  @media (max-width: 768px) {
    right: -0.5rem;
  }

  // Desktop: position above button
  @media (min-width: 769px) {
    top: auto;
    bottom: 100%;
    margin-top: 0;
    margin-bottom: 0.5rem;
  }
}

.theme-options {
  display: flex;
  flex-direction: column;
  gap: 0.25rem;
}

.theme-option {
  justify-content: flex-start;
  padding: 0.5rem 0.75rem;
  border: none;
  transition: all 0.2s ease;

  &:hover {
    transform: translateX(2px);
  }

  &.is-active {
    font-weight: 600;
  }

  .icon {
    margin-right: 0.5rem;
    font-size: 1rem;
  }
}

// Theme-aware styles for the toggle component
@include themifying($themes) {
  .theme-toggle-button {
    background: themed(surface);
    color: themed(text);
    border: 1px solid themed(border);

    &:hover {
      background: themed(primary);
      color: themed(background);
    }
  }

  .theme-popup {
    background: themed(surface);
    border: 1px solid themed(border);
  }

  .theme-option {
    background: transparent;
    color: themed(text);

    &:hover {
      background: themed(primary);
      color: themed(background);
    }

    &.is-active {
      background: color.scale(themed(primary), $alpha: -80%);
      color: themed(primary);
    }
  }
}

// ...existing code...
.text-primary {
  color: theme(primary);
}
.text-secondary {
  color: theme(secondary);
}
.text-accent {
  color: theme(accent);
}

.bg-primary {
  background: theme(primary);
}
.bg-secondary {
  background: theme(secondary);
}
.bg-accent {
  background: theme(accent);
}

// Exemplo de uso do mixin themifying
.custom-component {
  @include themifying($themes) {
    background: themed(background);
    border: 2px solid themed(primary);
    color: themed(text);

    &:hover {
      background: themed(primary);
      color: themed(background);
    }
  }
}
