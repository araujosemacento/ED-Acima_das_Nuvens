{
  "terminal.integrated.profiles.windows": {
    "venv": {
      "source": "PowerShell",
      "args": [
        "-NoExit",
        "-Command",
        "if (!(Test-Path '.venv')) { Write-Host 'Ambiente virtual não encontrado. Criando novo ambiente...' -ForegroundColor Yellow; python -m venv .venv; & '.venv\\Scripts\\activate'; python -m pip install --upgrade pip; Write-Host 'Pip atualizado!' -ForegroundColor Cyan; if (Test-Path 'requirements.txt') { python -m pip install -r requirements.txt; Write-Host 'Dependências instaladas do requirements.txt!' -ForegroundColor Cyan; }; Write-Host 'Ambiente virtual criado com sucesso!' -ForegroundColor Green; } else { Write-Host 'Ambiente virtual encontrado!' -ForegroundColor Green; & '.venv\\Scripts\\activate'; python.exe -m pip install --upgrade pip; Write-Host 'Pip atualizado!' -ForegroundColor Cyan; python -m pip freeze > requirements.txt; Write-Host 'Requirements atualizados!' -ForegroundColor Cyan; python -m pip install -r requirements.txt; Write-Host 'Dependências atualizadas!' -ForegroundColor Cyan; }; if (!$env:VIRTUAL_ENV) { & '.venv\\Scripts\\activate' }; Write-Host ('Ambiente virtual ativado! (' + $env:VIRTUAL_ENV + ')') -ForegroundColor Green; if (!(Test-Path 'node_modules')) { Write-Host 'Node modules não encontrado. Verificando Bun...' -ForegroundColor Yellow; if (Get-Command bun -ErrorAction SilentlyContinue) { Write-Host 'Instalando dependências com Bun...' -ForegroundColor Cyan; bun i; Write-Host 'Dependências instaladas com Bun!' -ForegroundColor Green; } else { Write-Host 'Bun não encontrado. Instalando Bun...' -ForegroundColor Yellow; npm i bun -g -y; Write-Host 'Bun instalado! Instalando dependências...' -ForegroundColor Cyan; bun i; Write-Host 'Dependências instaladas com Bun!' -ForegroundColor Green; } } else { Write-Host 'Node modules encontrado!' -ForegroundColor Green; }; Clear-Host; Write-Host 'Ambiente virtual ativado!' -ForegroundColor Green;"
      ]
    }
  },
  "terminal.integrated.defaultProfile.windows": "venv",
  "python.testing.pytestArgs": [
    "."
  ],
  "python.testing.unittestEnabled": false,
  "python.testing.pytestEnabled": true
}