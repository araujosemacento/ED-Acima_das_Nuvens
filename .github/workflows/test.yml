name: Education Platform Tests

on:
  push:
    branches: ['**']
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  pyodide-test:
    name: Pyodide Integration Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build application
        run: bun run build

      - name: Setup test environment
        run: |
          echo "🧪 Setting up educational platform test environment..."
          echo "TEST_MODE=true" >> $GITHUB_ENV

      - name: Validate Python scripts
        run: |
          echo "🐍 Validating Python educational scripts..."
          python3 -m py_compile static/scripts/exemplo.py
          echo "✅ Python scripts validated successfully"

      - name: Component structure test
        run: |
          echo "🔍 Testing component structure..."

          # Check if main components exist
          components=(
            "src/lib/components/Counter.svelte"
            "src/lib/components/PyodideInteractive.svelte"
            "src/lib/components/Welcome.svelte"
          )

          for component in "${components[@]}"; do
            if [ -f "$component" ]; then
              echo "✅ $component exists"
            else
              echo "❌ $component missing"
              exit 1
            fi
          done

      - name: I18n structure test
        run: |
          echo "🌍 Testing internationalization structure..."

          # Check if i18n files are valid JSON
          for lang in "pt-br" "en"; do
            if python3 -c "import json; json.load(open('messages/$lang.json'))"; then
              echo "✅ messages/$lang.json is valid JSON"
            else
              echo "❌ messages/$lang.json is invalid JSON"
              exit 1
            fi
          done

      - name: Educational content validation
        run: |
          echo "📚 Validating educational content..."

          # Check if Python example has educational functions
          if grep -q "def saudacao" static/scripts/exemplo.py; then
            echo "✅ Educational functions found in Python examples"
          else
            echo "❌ Educational functions missing in Python examples"
            exit 1
          fi

      - name: Test report
        run: |
          echo "📊 Educational platform validated and ready for deployment"
          echo "✅ All tests passed successfully"

  accessibility-test:
    name: Accessibility and UX Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build application
        run: bun run build

      - name: Material Design compliance
        run: |
          echo "🎨 Checking Material Design compliance..."

          # Check if theme files exist
          if [ -f "src/theme/_smui-theme.scss" ]; then
            echo "✅ Material Design theme configured"
          else
            echo "❌ Material Design theme missing"
            exit 1
          fi

      - name: Responsive design check
        run: |
          echo "📱 Checking responsive design elements..."

          # Check for responsive CSS in main stylesheet
          if grep -q "flex-direction: column" src/app.scss; then
            echo "✅ Responsive design patterns found"
          else
            echo "❌ Responsive design patterns missing"
            exit 1
          fi

      - name: Internationalization check
        run: |
          echo "🌍 Checking internationalization implementation..."

          # Check if paraglide is properly configured
          if [ -f "src/lib/paraglide/runtime.js" ]; then
            echo "✅ Internationalization runtime configured"
          else
            echo "❌ Internationalization runtime missing"
            exit 1
          fi
